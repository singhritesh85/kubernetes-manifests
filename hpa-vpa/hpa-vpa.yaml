---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: bankapp-hpa
  namespace: bankapp
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: bankapp-folo
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageValue: 1          ###averageUtilization: 50  ### For demonstration I used a targated value of 1  
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: mysql-vpa    ###mysql-primary-vpa
  namespace: mysql
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: StatefulSet
    name: mysql      ###mysql-primary
  updatePolicy:
    updateMode: Auto
  resourcePolicy:
    containerPolicies:
      - containerName: '*'
        minAllowed:
          cpu: 600m
          memory: 650Mi
        maxAllowed:
          cpu: 850m       #maximum vpa will be allocating this many cpus even if demand is higher.
          memory: 850Mi
        controlledResources: ["cpu", "memory"]
#---
#apiVersion: "autoscaling.k8s.io/v1"
#kind: VerticalPodAutoscaler
#metadata:
#  name: mysql-secondary-vpa
#  namespace: mysql
#spec:
#  targetRef:
#    apiVersion: "apps/v1"
#    kind: StatefulSet
#    name: mysql-secondary
#  updatePolicy:
#    updateMode: Auto
#  resourcePolicy:
#    containerPolicies:
#      - containerName: '*'
#        minAllowed:
#          cpu: 150m
#          memory: 128Mi
#        maxAllowed:
#          cpu: 300m  #maximum vpa will be allocating this many cpus even if demand is higher.
#          memory: 256Mi
#        controlledResources: ["cpu", "memory"]
